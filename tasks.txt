√ create tone
√ delete tone
√ adjust start/end of new tone
√ adjust pitch of new note
√ adjust start/end of existing tone
√ add note to tone for arpeggio
√ set scale constraint
√ allow deleting existing notes off the scale
√ set key
√ 3 channels
√ detect when the song stops and restart it. force stop the old SoundChannel for sanity.
√ separate song editing from Main.mxml, put in SongEditor.mxml
√ create Track.mxml, which shows the pattern number of each bar, the playhead
√ 8 patterns for lead, 4 for harmony and bass, assign with number keys
√ 16 bars
√ select channel with up and down arrows
√ select bar with left and right arrows
√ custom looping
√ pausing with space, skipping bars with []
√ tempo dropdown: fast, med, slow
√ save, load
√ beat count, part count
√ show the pitch letters: C, C#, D, etc
√ show ghosts of the notes in the other channels
√ waveform choices
√ bitcrushing the triangle wave
√ noise channel
√ Export to WAV
√ rearrange and hide panels to emphasize important features for beginners. flags for showing fifth, other channels, note names
√ illustrate loop area better
√ allow up to 8 patterns in all channels?
√ when you hover over a selected pattern/channel, instead of the box preview, show a triangle up or down depending on where your mouse is. the other triangle is hollowed out.
√ fix wrap around clipping bug on export
√ fix focus bug: spacebar reexports song!
√ The start of a tone can always snap to an existing tone end.
√ Be more lenient about starting at beats 2 and 3.
√ when bending pitch, multiply over each sample instead of adding.
√ copy length to default when editing length of notes. 
√ sawtooth!
√ piano along left side to preview notes? replace "show letters"
√ instead of conditionally reseting the period, try period -= int(period). benchmark!
√ pressing [] shouldn't escape the loop
√ button for export, clean slate, undo/redo, pause
√ replace ChangeFragment with ChangeSong, preserve pattern objects for undo history
√ compress bar data: 2 bars per character.
√ compress tone shapes
√ compress/decompress notes. confirm drums work. empirically optimize prev note count.
√ decompress tone shapes
√ get a domain name!
√ put song in url fragment
√ to save on file size, get rid of that flex text field at the top. 
√ put on website!
√ set up some basic html
√ new waves
√ source control
√ karplus strong filter + decay
√ separate main file for offline.
√ take focus from "save as wav" button after clicking it!
√ changing preferences doesn't need to be undoable but should update display.
√ save "preferences" to localSharedObject
√ pausing should actually stop SampleDataEvents

TIMBRE AND CRITICAL:
- as3 lib usage example
- new preferences: follow playhead, autoplay on load?
- for chorus, have two periods at multiples of the main freq. jitter on arpeggio slices?
- tremelo/vibrato choices

PUBLISHING:
- create public version number
- link to source in html
- add copyright disclaimer to page

MORE FEATURES:
- asynchronous wav export
- web interface to share songs so that other visitors can see them. let users enter a name and a "password", which can just be an email address, which is used to generate a "retro" gravatar identicon. 
- rapid note fadeout at end. 
- ADSR
- octave scrolling
- copy paste patterns, octave transposing
- use highpass to center output.
- volume pins, correctly moving pins when swingifying
- create portamento/slide, triggered by vertical dragging. The closer you are to a tone endpoint, the more bias towards changing tone length rather than portamento. How do I deal with combining portamento and arpeggio? I guess portamento is disabled if there's already a second note, unless it's in expert mode or a whole octave from the first note. 
- a flag: "patterns share settings" or "unify channel settings" or whatever
- custom bar count and pattern count for advanced users. 

POLISH:
- save most recent song to localSO so that it doesn't accidentally get lost when window closes
- don't autoplay until URL fragment has been passed through
- drums get custom lowpass based on change rate?
- Do I want to perform dynamic range compression? 
- think about equalizing some more. the low drums are very quiet! :/
- reset period to 0 at start of every note
- piano should still play when song is paused
- If mouse drags at least two beats closer to start than previous max, then enter precise mode where you can have any length. If flipping to backwards or <= doc.parts, reset out of precise mode. 
- move the playhead graphic gradually toward the next position. 
- visual feedback when a note is played
- make a non-editing embeddable player, in an iframe, with playhead tracking and all channels and no highlighting.
- 5 parts per beat?
- rapid document/fragment changes cause undefined state
- make some button to bookmark the song in your browser
- Dim the column occupied by a tone?
- preload some common tone shapes into the recentShape list
- Make a bunch of asserts, that the tones don't overlap, that the pins have the same duration as the tones, that the pins are in order, etc. And trace out the arguments to every change constructor and maybe even trace out the entire bar document data after every step. 

